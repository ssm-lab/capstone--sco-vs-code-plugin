{
  "name": "ecooptimizer-vs-code-plugin",
  "displayName": "EcoOptimizer VS Code Plugin",
  "description": "VS Code Plugin for EcoOptimizer Refactoring Tool",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:python"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "EcoOptimizer",
      "properties": {
        "ecooptimizer-vs-code-plugin.projectWorkspacePath": {
          "type": "string",
          "default": "",
          "description": "Path to the folder to be targeted, relative to current workspace. Defaults to the currently open folder in VS Code."
        },
        "ecooptimizer-vs-code-plugin.unitTestCommand": {
          "type": "string",
          "default": "",
          "description": "Command to run unit tests. Should be the same as if written in the terminal (e.i. pytest tests/)."
        },
        "ecooptimizer-vs-code-plugin.logsOutputPath": {
          "type": "string",
          "default": "",
          "description": "Path to store log files and output reports. Defaults to a 'logs' folder inside the workspace."
        }
      }
    },
    "commands": [
      {
        "command": "ecooptimizer-vs-code-plugin.detectSmells",
        "title": "Detect Smells",
        "category": "Eco"
      },
      {
        "command": "ecooptimizer-vs-code-plugin.refactorSmell",
        "title": "Refactor Smell",
        "category": "Eco"
      },
      {
        "command": "ecooptimizer-vs-code-plugin.refactorAllSmellsOfType",
        "title": "Refactor All Smells Of Type",
        "category": "Eco"
      },
      {
        "command": "ecooptimizer-vs-code-plugin.wipeWorkCache",
        "title": "Wipe Workspace Cache",
        "category": "Eco"
      },
      {
        "command": "ecooptimizer-vs-code-plugin.showRefactorSidebar",
        "title": "Show Refactor Sidebar",
        "category": "Eco"
      },
      {
        "command": "ecooptimizer-vs-code-plugin.pauseRefactorSidebar",
        "title": "Pause Refactor Sidebar",
        "category": "Eco",
        "when": "false"
      },
      {
        "command": "ecooptimizer-vs-code-plugin.clearRefactorSidebar",
        "title": "Clear Refactor Sidebar",
        "category": "Eco",
        "enablement": "false"
      },
      {
        "command": "ecooptimizer-vs-code-plugin.startLogging",
        "title": "Show Backend Logs",
        "category": "Eco",
        "enablement": "false"
      }
    ],
    "configuration": {
      "title": "EcoOptimizer",
      "properties": {
        "ecooptimizer.projectWorkspacePath": {
          "type": "string",
          "default": "",
          "description": "Path to the folder to be targeted, relative to current workspace. Defaults to the currently open folder in VS Code."
        },
        "ecooptimizer.logsOutputPath": {
          "type": "string",
          "default": "",
          "description": "Path to store log files and output reports. Defaults to a 'logs' folder inside the workspace."
        },
        "ecooptimizer.enableSmells": {
          "type": "object",
          "additionalProperties": false,
          "description": "Enable or disable specific code smell detections.",
          "default": {
            "long-element-chain": true,
            "too-many-arguments": true,
            "long-lambda-expression": true,
            "long-message-chain": true,
            "unused-variables-and-attributes": true,
            "cached-repeated-calls": true,
            "string-concat-loop": true,
            "no-self-use": true,
            "use-a-generator": true
          },
          "properties": {
            "long-element-chain": {
              "type": "boolean",
              "default": true,
              "description": "Long Element Chain"
            },
            "too-many-arguments": {
              "type": "boolean",
              "default": true,
              "description": "Long Parameter List"
            },
            "long-lambda-expression": {
              "type": "boolean",
              "default": true,
              "description": "Long Lambda Expression"
            },
            "long-message-chain": {
              "type": "boolean",
              "default": true,
              "description": "Long Message Chain"
            },
            "unused-variables-and-attributes": {
              "type": "boolean",
              "default": true,
              "description": "Unused Variables and Attributes"
            },
            "cached-repeated-calls": {
              "type": "boolean",
              "default": true,
              "description": "Cached Repeated Calls"
            },
            "string-concat-loop": {
              "type": "boolean",
              "default": true,
              "description": "String Concatenation in Loop"
            },
            "no-self-use": {
              "type": "boolean",
              "default": true,
              "description": "No Self Use"
            },
            "use-a-generator": {
              "type": "boolean",
              "default": true,
              "description": "Use a Generator"
            }
          }
        }
      }
    },
    "keybindings": [
      {
        "command": "ecooptimizer-vs-code-plugin.refactorSmell",
        "key": "ctrl+shift+r",
        "when": "editorTextFocus && resourceExtname == '.py'"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "refactorSidebarContainer",
          "title": "Refactoring",
          "icon": "resources/refactor-icon.svg"
        }
      ]
    },
    "views": {
      "refactorSidebarContainer": [
        {
          "id": "extension.refactorSidebar",
          "name": "Refactoring Summary",
          "type": "webview"
        }
      ]
    }
  },
  "directories": {
    "src": "./src",
    "test": "./test"
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "test": "jest",
    "test:watch": "jest --watchAll --no-cache",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "lint": "eslint src",
    "prepare": "husky"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "setupFilesAfterEnv": [
      "./test/setup.ts"
    ],
    "moduleNameMapper": {
      "^vscode$": "<rootDir>/test/mocks/vscode-mock.ts"
    }
  },
  "lint-staged": {
    "src/**/*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@types/ws": "^8.5.14",
    "@typescript-eslint/eslint-plugin": "^8.24.1",
    "@typescript-eslint/parser": "^8.24.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "css-loader": "^7.1.2",
    "eslint": "^9.21.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-unused-imports": "^4.1.4",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^15.4.3",
    "prettier": "^3.5.2",
    "prettier-plugin-tailwindcss": "^0.6.11",
    "style-loader": "^4.0.0",
    "ts-jest": "^29.2.6",
    "ts-loader": "^9.5.1",
    "typescript": "^5.7.2",
    "webpack": "^5.95.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@types/dotenv": "^6.1.1",
    "bufferutil": "^4.0.9",
    "dotenv": "^16.4.7",
    "dotenv-webpack": "^8.1.0",
    "utf-8-validate": "^6.0.5",
    "ws": "^8.18.0"
  }
}
